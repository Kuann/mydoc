**************************************
* Use updateload file
**************************************

<!-- ----------------------------------------
	b1 dependencies
----------------------------------------- -->
<dependency>
	<groupId>commons-fileupload</groupId>
	<artifactId>commons-fileupload</artifactId>
	<version>1.3.1</version>
</dependency>

<dependency>
	<groupId>commons-io</groupId>
	<artifactId>commons-io</artifactId>
	<version>2.4</version>
</dependency>
<!-- ----------------------------------------
    b2.1 create controller 
----------------------------------------- -->
<bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="100000000" />
    </bean>

<!-- ----------------------------------------
	b2.2 create controller 
----------------------------------------- -->
@RequestMapping(value = "/api/uploadMultipleFile", method = RequestMethod.POST)
public @ResponseBody
String uploadMultipleFileHandler(@RequestParam(value = "name[]",required = false) String[] names,
        @RequestParam("file[]") MultipartFile[] files) {

    if (files.length != names.length)
        return "Mandatory information missing";

    String message = "";
    for (int i = 0; i < files.length; i++) {
        MultipartFile file = files[i];
        String name = names[i] + "" + i;
        try {
            byte[] bytes = file.getBytes();

            // Creating the directory to store file
            String rootPath = System.getProperty("catalina.home");
            File dir = new File(rootPath + File.separator + "tmpFiles");
            if (!dir.exists())
                dir.mkdirs();

            // Create the file on server
            File serverFile = new File(dir.getAbsolutePath()
                    + File.separator + name);
            BufferedOutputStream stream = new BufferedOutputStream(
                    new FileOutputStream(serverFile));
            stream.write(bytes);
            stream.close();

            message = message + "You successfully uploaded file=" + name
                    + "<br />";
        } catch (Exception e) {
            return "You failed to upload " + name + " => " + e.getMessage();
        }
    }
    return message;
}

<!-- ----------------------------------------
	b2 upload input
----------------------------------------- -->
<input type = "file" name = "uploadfile" id = "upload" multiple/><br/>
<button id = "btnUp">Upload</button>

<!-- ----------------------------------------
	b3 script upload
----------------------------------------- -->
$(document).ready(function(){
$(document).on("click","#btnUp",function(){
	
	  /* var oMyForm = new FormData();
	  
		console.log($("#upload")[0].files[0]);
		
		oMyForm.append("name","mhdanh.png");
	   oMyForm.append("file", $("#upload")[0].files[0]);
	 
	  $.ajax({
	    url: ctxPath + "/api/uploadFile",
	    data: oMyForm,
	    dataType: 'text',
	    processData: false,
	    contentType: false,
	    method: 'POST',
	    success: function(data){
	      alert(data);
	    }
	  }); */
	var oMyForm = new FormData();	
	oMyForm.append("name","mhdanh.png");
	for(var i = 0;i<$("#upload")[0].files.length;i++)
   	{
		console.log($("#upload")[0].files[i]);
		oMyForm.append("name[]","name"+i);
		oMyForm.append("file[]", $("#upload")[0].files[i]);
   			
   	}
	
 
  $.ajax({
    url: ctxPath + "/api/uploadMultipleFile",
    data: oMyForm,
    dataType: 'text',
    processData: false,
    contentType: false,
    method: 'POST',
    success: function(data){
      console.log(data);
    }
  });
});
});